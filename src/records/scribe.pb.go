// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scribe.proto

package records

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//
//Status is used to determine if experiments/samples have tagged processes, or if they have been announced via the message server
type Status int32

const (
	Status_UN_INITIALIZED Status = 0
	Status_untagged       Status = 1
	Status_tagged         Status = 2
	Status_announced      Status = 3
)

var Status_name = map[int32]string{
	0: "UN_INITIALIZED",
	1: "untagged",
	2: "tagged",
	3: "announced",
}

var Status_value = map[string]int32{
	"UN_INITIALIZED": 0,
	"untagged":       1,
	"tagged":         2,
	"announced":      3,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_df7aaa7859039b55, []int{0}
}

//
//Comments are used to record a message history
type Comment struct {
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Text                 string               `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Comment) Reset()         { *m = Comment{} }
func (m *Comment) String() string { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()    {}
func (*Comment) Descriptor() ([]byte, []int) {
	return fileDescriptor_df7aaa7859039b55, []int{0}
}

func (m *Comment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Comment.Unmarshal(m, b)
}
func (m *Comment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Comment.Marshal(b, m, deterministic)
}
func (m *Comment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Comment.Merge(m, src)
}
func (m *Comment) XXX_Size() int {
	return xxx_messageInfo_Comment.Size(m)
}
func (m *Comment) XXX_DiscardUnknown() {
	xxx_messageInfo_Comment.DiscardUnknown(m)
}

var xxx_messageInfo_Comment proto.InternalMessageInfo

func (m *Comment) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Comment) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

//
//Project is used to group Runs, Libraries and Samples
type Project struct {
	Label                string            `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	CID                  string            `protobuf:"bytes,3,opt,name=CID,proto3" json:"CID,omitempty"`
	Runs                 map[string]string `protobuf:"bytes,4,rep,name=Runs,proto3" json:"Runs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Project) Reset()         { *m = Project{} }
func (m *Project) String() string { return proto.CompactTextString(m) }
func (*Project) ProtoMessage()    {}
func (*Project) Descriptor() ([]byte, []int) {
	return fileDescriptor_df7aaa7859039b55, []int{1}
}

func (m *Project) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Project.Unmarshal(m, b)
}
func (m *Project) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Project.Marshal(b, m, deterministic)
}
func (m *Project) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Project.Merge(m, src)
}
func (m *Project) XXX_Size() int {
	return xxx_messageInfo_Project.Size(m)
}
func (m *Project) XXX_DiscardUnknown() {
	xxx_messageInfo_Project.DiscardUnknown(m)
}

var xxx_messageInfo_Project proto.InternalMessageInfo

func (m *Project) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Project) GetCID() string {
	if m != nil {
		return m.CID
	}
	return ""
}

func (m *Project) GetRuns() map[string]string {
	if m != nil {
		return m.Runs
	}
	return nil
}

//
//ProjectDatabase is used to organise Projects
type ProjectDatabase struct {
	Projects             map[string]*Project `protobuf:"bytes,2,rep,name=projects,proto3" json:"projects,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Pin                  bool                `protobuf:"varint,3,opt,name=pin,proto3" json:"pin,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ProjectDatabase) Reset()         { *m = ProjectDatabase{} }
func (m *ProjectDatabase) String() string { return proto.CompactTextString(m) }
func (*ProjectDatabase) ProtoMessage()    {}
func (*ProjectDatabase) Descriptor() ([]byte, []int) {
	return fileDescriptor_df7aaa7859039b55, []int{2}
}

func (m *ProjectDatabase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProjectDatabase.Unmarshal(m, b)
}
func (m *ProjectDatabase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProjectDatabase.Marshal(b, m, deterministic)
}
func (m *ProjectDatabase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProjectDatabase.Merge(m, src)
}
func (m *ProjectDatabase) XXX_Size() int {
	return xxx_messageInfo_ProjectDatabase.Size(m)
}
func (m *ProjectDatabase) XXX_DiscardUnknown() {
	xxx_messageInfo_ProjectDatabase.DiscardUnknown(m)
}

var xxx_messageInfo_ProjectDatabase proto.InternalMessageInfo

func (m *ProjectDatabase) GetProjects() map[string]*Project {
	if m != nil {
		return m.Projects
	}
	return nil
}

func (m *ProjectDatabase) GetPin() bool {
	if m != nil {
		return m.Pin
	}
	return false
}

//
//Run is used to describe a Nanopore sequencing run
type Run struct {
	Created *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`
	Label   string               `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	//string parentProjectLabel = 3;               // the label of the project that this run belongs to
	ParentProjectCID     string          `protobuf:"bytes,4,opt,name=parentProjectCID,proto3" json:"parentProjectCID,omitempty"`
	History              []*Comment      `protobuf:"bytes,5,rep,name=history,proto3" json:"history,omitempty"`
	Status               Status          `protobuf:"varint,6,opt,name=status,proto3,enum=records.Status" json:"status,omitempty"`
	Tags                 map[string]bool `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	RequestOrder         []string        `protobuf:"bytes,8,rep,name=requestOrder,proto3" json:"requestOrder,omitempty"`
	OutputDirectory      string          `protobuf:"bytes,9,opt,name=outputDirectory,proto3" json:"outputDirectory,omitempty"`
	Fast5OutputDirectory string          `protobuf:"bytes,10,opt,name=fast5OutputDirectory,proto3" json:"fast5OutputDirectory,omitempty"`
	FastqOutputDirectory string          `protobuf:"bytes,11,opt,name=fastqOutputDirectory,proto3" json:"fastqOutputDirectory,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Run) Reset()         { *m = Run{} }
func (m *Run) String() string { return proto.CompactTextString(m) }
func (*Run) ProtoMessage()    {}
func (*Run) Descriptor() ([]byte, []int) {
	return fileDescriptor_df7aaa7859039b55, []int{3}
}

func (m *Run) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Run.Unmarshal(m, b)
}
func (m *Run) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Run.Marshal(b, m, deterministic)
}
func (m *Run) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Run.Merge(m, src)
}
func (m *Run) XXX_Size() int {
	return xxx_messageInfo_Run.Size(m)
}
func (m *Run) XXX_DiscardUnknown() {
	xxx_messageInfo_Run.DiscardUnknown(m)
}

var xxx_messageInfo_Run proto.InternalMessageInfo

func (m *Run) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Run) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Run) GetParentProjectCID() string {
	if m != nil {
		return m.ParentProjectCID
	}
	return ""
}

func (m *Run) GetHistory() []*Comment {
	if m != nil {
		return m.History
	}
	return nil
}

func (m *Run) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_UN_INITIALIZED
}

func (m *Run) GetTags() map[string]bool {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Run) GetRequestOrder() []string {
	if m != nil {
		return m.RequestOrder
	}
	return nil
}

func (m *Run) GetOutputDirectory() string {
	if m != nil {
		return m.OutputDirectory
	}
	return ""
}

func (m *Run) GetFast5OutputDirectory() string {
	if m != nil {
		return m.Fast5OutputDirectory
	}
	return ""
}

func (m *Run) GetFastqOutputDirectory() string {
	if m != nil {
		return m.FastqOutputDirectory
	}
	return ""
}

//
//Sample is used to describe a biological sample which is being sequenced as part of a Run
type Sample struct {
	Created              *timestamp.Timestamp `protobuf:"bytes,1,opt,name=created,proto3" json:"created,omitempty"`
	Label                string               `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`
	History              []*Comment           `protobuf:"bytes,3,rep,name=history,proto3" json:"history,omitempty"`
	Status               Status               `protobuf:"varint,4,opt,name=status,proto3,enum=records.Status" json:"status,omitempty"`
	Tags                 map[string]bool      `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	RequestOrder         []string             `protobuf:"bytes,6,rep,name=requestOrder,proto3" json:"requestOrder,omitempty"`
	ParentExperiment     string               `protobuf:"bytes,7,opt,name=parentExperiment,proto3" json:"parentExperiment,omitempty"`
	Barcode              int32                `protobuf:"varint,8,opt,name=barcode,proto3" json:"barcode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Sample) Reset()         { *m = Sample{} }
func (m *Sample) String() string { return proto.CompactTextString(m) }
func (*Sample) ProtoMessage()    {}
func (*Sample) Descriptor() ([]byte, []int) {
	return fileDescriptor_df7aaa7859039b55, []int{4}
}

func (m *Sample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sample.Unmarshal(m, b)
}
func (m *Sample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sample.Marshal(b, m, deterministic)
}
func (m *Sample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sample.Merge(m, src)
}
func (m *Sample) XXX_Size() int {
	return xxx_messageInfo_Sample.Size(m)
}
func (m *Sample) XXX_DiscardUnknown() {
	xxx_messageInfo_Sample.DiscardUnknown(m)
}

var xxx_messageInfo_Sample proto.InternalMessageInfo

func (m *Sample) GetCreated() *timestamp.Timestamp {
	if m != nil {
		return m.Created
	}
	return nil
}

func (m *Sample) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Sample) GetHistory() []*Comment {
	if m != nil {
		return m.History
	}
	return nil
}

func (m *Sample) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_UN_INITIALIZED
}

func (m *Sample) GetTags() map[string]bool {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Sample) GetRequestOrder() []string {
	if m != nil {
		return m.RequestOrder
	}
	return nil
}

func (m *Sample) GetParentExperiment() string {
	if m != nil {
		return m.ParentExperiment
	}
	return ""
}

func (m *Sample) GetBarcode() int32 {
	if m != nil {
		return m.Barcode
	}
	return 0
}

func init() {
	proto.RegisterEnum("records.Status", Status_name, Status_value)
	proto.RegisterType((*Comment)(nil), "records.Comment")
	proto.RegisterType((*Project)(nil), "records.Project")
	proto.RegisterMapType((map[string]string)(nil), "records.Project.RunsEntry")
	proto.RegisterType((*ProjectDatabase)(nil), "records.ProjectDatabase")
	proto.RegisterMapType((map[string]*Project)(nil), "records.ProjectDatabase.ProjectsEntry")
	proto.RegisterType((*Run)(nil), "records.Run")
	proto.RegisterMapType((map[string]bool)(nil), "records.Run.TagsEntry")
	proto.RegisterType((*Sample)(nil), "records.Sample")
	proto.RegisterMapType((map[string]bool)(nil), "records.Sample.TagsEntry")
}

func init() {
	proto.RegisterFile("scribe.proto", fileDescriptor_df7aaa7859039b55)
}

var fileDescriptor_df7aaa7859039b55 = []byte{
	// 591 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x52, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0xb1, 0xeb, 0x9f, 0xe9, 0x9f, 0xb5, 0xaa, 0xd0, 0x92, 0x0b, 0x56, 0x0e, 0xc5, 0x8a,
	0x84, 0x2b, 0x05, 0x10, 0x15, 0x37, 0x68, 0x72, 0x88, 0x04, 0x2d, 0xda, 0x16, 0x21, 0x71, 0x41,
	0x6b, 0x7b, 0x6b, 0x0c, 0x89, 0xed, 0xee, 0xae, 0x51, 0xfb, 0x2a, 0x3c, 0x08, 0x6f, 0xc5, 0x13,
	0x70, 0x41, 0x5e, 0xff, 0x24, 0x35, 0x85, 0x56, 0x88, 0xdb, 0xec, 0x37, 0xdf, 0xcc, 0x7c, 0xb3,
	0xdf, 0xc0, 0x96, 0x88, 0x78, 0x1a, 0xb2, 0xa0, 0xe0, 0xb9, 0xcc, 0x91, 0xc5, 0x59, 0x94, 0xf3,
	0x58, 0x0c, 0x1f, 0x26, 0x79, 0x9e, 0x2c, 0xd8, 0x81, 0x82, 0xc3, 0xf2, 0xfc, 0x40, 0xa6, 0x4b,
	0x26, 0x24, 0x5d, 0x16, 0x35, 0x73, 0xf4, 0x1e, 0xac, 0xa3, 0x7c, 0xb9, 0x64, 0x99, 0x44, 0x87,
	0xe0, 0x74, 0x59, 0xac, 0x79, 0x9a, 0xbf, 0x39, 0x19, 0x06, 0x75, 0x7d, 0xd0, 0xd6, 0x07, 0x67,
	0x2d, 0x83, 0xac, 0xc8, 0x08, 0x81, 0x21, 0xd9, 0xa5, 0xc4, 0x03, 0x4f, 0xf3, 0x1d, 0xa2, 0xe2,
	0xd1, 0x37, 0x0d, 0xac, 0xb7, 0x3c, 0xff, 0xcc, 0x22, 0x89, 0xf6, 0x60, 0x63, 0x41, 0x43, 0xb6,
	0x68, 0x08, 0xf5, 0x03, 0xb9, 0xa0, 0x1f, 0xcd, 0xa7, 0x58, 0x57, 0x58, 0x15, 0xa2, 0x00, 0x0c,
	0x52, 0x66, 0x02, 0x1b, 0x9e, 0xae, 0x86, 0x37, 0x5b, 0x04, 0x4d, 0x9f, 0xa0, 0x4a, 0xce, 0x32,
	0xc9, 0xaf, 0x88, 0xe2, 0x0d, 0x9f, 0x83, 0xd3, 0x41, 0x55, 0xbb, 0x2f, 0xec, 0x4a, 0x09, 0x77,
	0x48, 0x15, 0x56, 0x63, 0xbf, 0xd2, 0x45, 0xc9, 0xda, 0xb1, 0xea, 0xf1, 0x62, 0x70, 0xa8, 0x8d,
	0xbe, 0x6b, 0xb0, 0xdb, 0x34, 0x9d, 0x52, 0x49, 0x43, 0x2a, 0x18, 0x7a, 0x05, 0x76, 0x51, 0x43,
	0x02, 0x0f, 0x94, 0x80, 0xfd, 0xbe, 0x80, 0x96, 0xdb, 0xbe, 0x1b, 0x31, 0x5d, 0x5d, 0xa5, 0xa1,
	0x48, 0x33, 0xb5, 0x92, 0x4d, 0xaa, 0x70, 0xf8, 0x06, 0xb6, 0xaf, 0x91, 0x6f, 0x90, 0xb9, 0xbf,
	0x2e, 0x73, 0x73, 0xe2, 0xf6, 0xa7, 0xae, 0x0b, 0xff, 0xa1, 0x83, 0x4e, 0xca, 0x0c, 0x3d, 0x05,
	0x2b, 0xe2, 0x8c, 0x4a, 0x16, 0xdf, 0xc1, 0xa9, 0x96, 0xfa, 0x07, 0x1f, 0xc6, 0xe0, 0x16, 0x94,
	0xb3, 0x4c, 0x36, 0xf3, 0x2a, 0x53, 0x0c, 0x45, 0xf8, 0x0d, 0x47, 0x63, 0xb0, 0x3e, 0xa5, 0x42,
	0xe6, 0xfc, 0x0a, 0x6f, 0xa8, 0x3f, 0x5a, 0xa9, 0x6d, 0xce, 0x88, 0xb4, 0x04, 0xf4, 0x08, 0x4c,
	0x21, 0xa9, 0x2c, 0x05, 0x36, 0x3d, 0xcd, 0xdf, 0x99, 0xec, 0x76, 0xd4, 0x53, 0x05, 0x93, 0x26,
	0x8d, 0xc6, 0x60, 0x48, 0x9a, 0x08, 0x6c, 0xa9, 0x8e, 0xf7, 0x3b, 0x1a, 0x29, 0xb3, 0xe0, 0x8c,
	0x26, 0xad, 0xe5, 0x15, 0x07, 0x8d, 0x60, 0x8b, 0xb3, 0x8b, 0x92, 0x09, 0x79, 0xc2, 0x63, 0xc6,
	0xb1, 0xed, 0xe9, 0xbe, 0x43, 0xae, 0x61, 0xc8, 0x87, 0xdd, 0xbc, 0x94, 0x45, 0x29, 0xa7, 0x29,
	0x67, 0x91, 0x12, 0xeb, 0xa8, 0x7d, 0xfa, 0x30, 0x9a, 0xc0, 0xde, 0x39, 0x15, 0xf2, 0xd9, 0x49,
	0x8f, 0x0e, 0x8a, 0x7e, 0x63, 0xae, 0xad, 0xb9, 0xe8, 0xd7, 0x6c, 0xae, 0x6a, 0xfa, 0xb9, 0xea,
	0x50, 0xbb, 0x45, 0x6e, 0x3b, 0x54, 0x7b, 0xdd, 0xef, 0x9f, 0x03, 0x30, 0x4f, 0xe9, 0xb2, 0x58,
	0xb0, 0xff, 0x6c, 0x79, 0x67, 0xa3, 0x7e, 0x77, 0x1b, 0x8d, 0xbf, 0xdb, 0xf8, 0xb8, 0xb1, 0xb1,
	0x3e, 0x8c, 0x07, 0x2b, 0x9a, 0xd2, 0x7f, 0xab, 0x93, 0xe6, 0x0d, 0x4e, 0x76, 0xa7, 0x39, 0xbb,
	0x2c, 0x18, 0x4f, 0x2b, 0x61, 0xd8, 0x5a, 0x3f, 0xcd, 0x15, 0x8e, 0x30, 0x58, 0x21, 0xe5, 0x51,
	0x1e, 0x33, 0x6c, 0x7b, 0x9a, 0xbf, 0x41, 0xda, 0xe7, 0x3f, 0xff, 0xfe, 0x78, 0x06, 0x66, 0xbd,
	0x23, 0x42, 0xb0, 0xf3, 0xee, 0xf8, 0xe3, 0xfc, 0x78, 0x7e, 0x36, 0x7f, 0xf9, 0x7a, 0xfe, 0x61,
	0x36, 0x75, 0xef, 0xa1, 0x2d, 0xb0, 0xcb, 0x4c, 0xd2, 0x24, 0x61, 0xb1, 0xab, 0x21, 0x00, 0xb3,
	0x89, 0x07, 0x68, 0x1b, 0x1c, 0x9a, 0x65, 0x79, 0x99, 0x45, 0x2c, 0x76, 0xf5, 0xd0, 0x54, 0x06,
	0x3d, 0xf9, 0x15, 0x00, 0x00, 0xff, 0xff, 0x2c, 0xa7, 0xb3, 0x33, 0xa4, 0x05, 0x00, 0x00,
}
